# My personal [Slate](https://github.com/jigish/slate) config.

# Note - I'm also trying out Flycut, bound to a shortcut in my Slate
# 'namespace', if you will - Control-Shift-v. We'll see how it works.

# Not sure what this does. Someone recommended it.
config defaultToCurrentScreen true

# Make window hints show up for everything, with icons.
config windowHintsShowIcons true
config windowHintsIgnoreHiddenWindows false
config windowHintsSpread true

# Keybindings.

# I use ctrl+shift as my trigger combo, as few apps use that particular
# shortcut pair. A few in Chrome and Emacs.
alias hyper ctrl;shift

# There are a few things I use an alternate key combo for.
alias mega cmd;alt;shift

# Note that the hints are chosen to roughly distribute things evenly between
# the left and right hands, starting with home row, then top, then bottom.
bind s:${hyper} hint ALSKDJFHGQPWOEIRUTYZMXNCBV


# Window movement keys.
bind j:${hyper} corner top-right
bind k:${hyper} corner bottom-left
bind l:${hyper} corner bottom-right

# Make current window half the monitor size, Useful for side-by-siding windows.
# 'divide' is a bad mnemonic, but watcha gonna do?
# ...besides call Ghostbusters.
bind d:${hyper} move screenOriginX;screenOriginY screenSizeX/2;screenSizeY

# Made window take up the full screen. I don't really like OS X's actual
# fullscreen feature, for reasons I can't articulate. Bound to s because it
# wasn't taken and it's next to 'd', which I'm already using for half-sizing a
# window.
bind s:${hyper} move screenOriginX;screenOriginY screenSizeX;screenSizeY

# Window resizing

# N.B.: There's a known bug where you cannot resize windows that are flush with
# the right edge of the screen:
#
# https://github.com/jigish/slate/issues/259
#
# The easiest workaround is to shrink right-side windows to the left, expand
# them to the left a few times, then throw them back to the right.
bind left:${hyper} resize +10% +0 top-right
bind right:${hyper} resize +10% +0 top-left

bind home:${hyper} resize -10% -0 top-left
bind end:${hyper} resize -10% -0 top-right


# Bindings for running one-off commands.

# Activate screensaver from keyboard. If your machine is set up to lock the
# display on screensaver, this is a handy shortcut for locking the display.
bind a:${hyper} shell path:~ '/Users/neagleson/dotfiles/bin/screensaver'

# Start up a new Emacs instance. Useful when I'm writing init code and want to
# test it.
bind w:${hyper} shell path:~ '/usr/bin/open -n -a Emacs.app'


# Bindings for changing keyboard layouts.
#
# These are for KeyRemap4MacBook. For Karabiner, I'd have to use
# /Applications/Karabiner.app/Contents/Library/bin/karabiner as the command.

# Activate MacBook Pro KeyRemap4MacBook profile.
bind x:${mega} shell '/Applications/KeyRemap4MacBook.app/Contents/Applications/KeyRemap4MacBook_cli.app/Contents/MacOS/KeyRemap4MacBook_cli select 2'
# Activate Default KeyRemap4MacBook profile (mainly used by my wife).
bind z:${mega} shell '/Applications/KeyRemap4MacBook.app/Contents/Applications/KeyRemap4MacBook_cli.app/Contents/MacOS/KeyRemap4MacBook_cli select 1'


# Window layouts.
#
# GRIPE I would like to set window sizes dynamically based on Emacs' window
# size, which is itself chosen dynamically based on monitor resolution/pixel
# density. Alas, I do not see a way to make Slate do that.

# For use with a single 27-inch Apple Cinema Display.
layout CinemaDisplay 'Emacs' corner top-left
layout CinemaDisplay 'Google Chrome' corner top-right resize:1058;939
layout CinemaDisplay 'Slack' corner bottom-right resize:1058;478
layout CinemaDisplay 'Terminal' corner bottom-left

bind 1:${hyper} layout CinemaDisplay

layout MacBookPro 'Emacs' corner top-left
layout MacBookPro 'Google Chrome' corner top-right resize:842;878
layout MacBookPro 'Slack' corner bottom-right resize:773;398
layout MacBookPro 'Terminal' corner bottom-left

bind 2:${hyper} layout MacBookPro

# For use with a MacBook Pro 17", no external displays.
layout MacBookPro17 'Emacs' corner top-left
layout MacBookPro17 'Google Chrome' corner top-right resize:916;1028
layout MacBookPro17 'Adium' corner bottom-right resize
layout MacBookPro17 'Terminal' corner bottom-left

bind 3:${hyper} layout MacBookPro17

default MacBookPro17 count:1

# For use with a MacBook Pro 17" with an external 19" monitor.
#
# More Slate bugs: 'throw' does not work reliably in layouts. Use 'move'
# instead.
layout MacBookPro17Plus19 'Google Chrome':REPEAT move screenOriginX+screenSizeX/2;screenOriginY screenSizeX/2;screenSizeY 1
layout MacBookPro17Plus19 'Emacs' move screenOriginX;screenOriginY windowSizeX;windowSizeY 0
layout MacBookPro17Plus19 'Slack' move screenOriginX+screenSizeX-windowSizeX;screenOriginY+screenSizeY-windowSizeY windowSizeX;windowSizeY 0 | move screenOriginX;screenOriginY windowSizeX;windowSizeY 0
layout MacBookPro17Plus19 'Terminal':REPEAT move screenOriginX;screenOriginY screenSizeX/2;screenSizeY 1

bind 4:${hyper} layout MacBookPro17Plus19

# For use with my pair of 27-inch ASUS displays at home.
layout Dual27s 'Google Chrome':REPEAT move screenOriginX+screenSizeX/2;screenOriginY screenSizeX/2;screenSizeY 1
layout Dual27s 'Emacs' move screenOriginX;screenOriginY windowSizeX;windowSizeY 0
layout Dual27s 'Slack' move screenOriginX+screenSizeX-windowSizeX;screenOriginY+screenSizeY-windowSizeY windowSizeX;windowSizeY 0 | move screenOriginX;screenOriginY windowSizeX;windowSizeY 0
layout Dual27s 'Terminal':REPEAT move screenSizeX-732;screenOriginY 732;screenSizeY 0

bind 5:${hyper} layout Dual27s

# I would like to set this with the default resolutions: option, since I have
# hardcoded window sizes in it. However, that does not seem to be working. Not
# sure what I might be missing.
default Dual27s count:2


# TODO Figure out what to do with dual 27" dispays. I now have them for the
# first time since MapQuest and I'm a little overwhelmed by the sheer amount of
# available space.
#
# I'm not sure what to do with the right monitor. Just splitting to a pair of
# side-by-side browser windows seems like a waste, but at present I don't see
# what else to do with it.
#
# The left side suggests some obvious things, though:
#
# - Triple-pane my main Emacs window
