#! /usr/bin/env bash

script_name="$(basename "$0")"
help_msg="Send a notification to the user.

Make sure you set terminal-notifier's alert style to Alerts, if you don't want
them to auto-hide after a moment.

TODO Automate setting various apps' preference alerts. Then the above reminder
can go away. Looks like ~/Library/Preferences/com.apple.ncprefs.plist is the
relevant victim, and this SO post should be a decent guide to doing it: https://apple.stackexchange.com/a/460501

It should be easy enough to port to other platforms next time I'm on one of them.

A number of the scripts in my dotfiles depend on this for letting me know if
something interesting has happened.

It's also handy in its own right, usually for letting me ignore slow commands
until they've either succeeded or failed.

Usage: $script_name <message> [<title>]"

if [ "$1" = '--help' ]; then
    echo "$help_msg"

    exit
elif [ $# -lt 1 ]; then
    echo "$help_msg" >&2

    exit 2
fi

title='Notification'
if [ -n "$2" ]; then
    title="$2"
fi

if command -v terminal-notifier > /dev/null; then
    # macOS CLI notification tool
    terminal-notifier -message "$1" -title "$title"
else
    # The notification tool I use with my NixOS desktop.
    #
    # FIXME Figure out how to keep notifications from expiring.
    notify-desktop "$title" "$1"
fi
