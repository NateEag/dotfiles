#! /bin/bash

# Simple wrapper around notification commands and sleep to send messages after
# a set amount of time has passed.
#
# TODO Use the at command instead of sleep?

script_name=$(basename "$0")
usage_msg="Send a notification after a certain amount of time has passed.

If you want to cancel a timer, 'pgrep -lf timer' should help you find the
processes to kill, from whence pkill can be handy (using the timer message to
target the specific timer you want to cancel).

Usage: $script_name <message> <minutes>]"

if [ "$1" = '--help' ]; then
    echo "$usage_msg"

    exit
elif [ $# -ne 2 ]; then
    echo "$usage_msg" >&2

    exit 2
fi

is-int () {
    [[ "$1" =~ ^[0-9]+$ ]]

    return $?
}

if ! is-int "$2"; then
    echo "$2 is not an integer!" >&2



    exit 1
fi

seconds="$(( $2 * 60 ))"

applescript="display notification \"$1\" with title \"Time's up\" "
$(sleep "$seconds" && osascript -e "$applescript") &
