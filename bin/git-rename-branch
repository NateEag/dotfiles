#! /bin/bash

help_msg="Rename the given branch from old-name to new-name.

If it is a tracking branch, tries to 'rename' it by pushing the renamed branch
to the new name on the remote and deleting the branch under the old name.

Use responsibly. If you break crap it's your fault.

Usage: git rename-branch <old-name> <new-name>"

if [[ $# -ne 2 ]]; then
    echo "$help_msg" >&2

    exit 2
fi

old_branch_name="$1"
new_branch_name="$2"

if ! git show-ref --verify --quiet "refs/heads/$old_branch_name"; then
    echo "$old_branch_name is not an existing local branch!" >&2

    exit 2
fi


remote=$(git config branch."$1".remote)
upstream=$(git config branch."$1".merge)
upstream="${upstream#refs/heads/}"

if [ -n "$upstream" ]; then
    if git push --set-upstream "$remote" "$old_branch_name:$new_branch_name"; then
        # Since pushing the new branch succeeded, it should be safe to delete
        # the old one.
        git push "$remote" ":$old_branch_name"
    else
        # FIXME Bail if we push the new branch but fail to delete the old.
        echo "A remote branch exists and we failed to rename it. Bailing out." >&2

        exit 1
    fi
fi

if ! git branch --move "$old_branch_name" "$new_branch_name" ; then
    echo "Renaming local branch failed!" >&2

    exit 1
fi
