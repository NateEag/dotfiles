#########################################################################
# brew services completion
#########################################################################

# Called once on shell startup
: "${HOMEBREW_PREFIX:=$(brew --prefix)}"

# Find previous non-switch word
__brewcomp_prev() {
  local idx=$((COMP_CWORD - 1))
  while [[ "${COMP_WORDS[idx]}" = -* ]]
  do
    (( idx-- ))
  done
  echo "${COMP_WORDS[idx]}"
}

# Complete brew services xxxxxxx
_brew_services() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local prv=$(__brewcomp_prev)
  case "$prv" in
    stop|cleanup)
      # get list of agent plists, clean up with param expansion
      # this only lists started services
      local agents=( $HOME/Library/LaunchAgents/homebrew* /Library/LaunchDaemons/homebrew* )
      agents=( "${agents[@]##*/homebrew.mxcl.}" )
      agents=( "${agents[@]%.plist}" )
      COMPREPLY=($(compgen -W "${agents[*]}" -- "$cur"))
      ;;
    start|restart|run)
      local agents=( $(find "${HOMEBREW_PREFIX}/Cellar" -mindepth 3 -maxdepth 3 -name 'homebrew.mxcl.*.plist') )
      agents=( "${agents[@]##*/homebrew.mxcl.}" )
      agents=( "${agents[@]%.plist}" )
      COMPREPLY=($(compgen -W "${agents[*]}" -- "$cur"))
      ;;
    *)
      COMPREPLY=($(compgen -W "list run start stop restart cleanup" -- "$cur"))
      ;;
  esac
}

# Wrapper that might call _brew_services or might call _brew. Is there another
# way to do this?
_brew_with_services() {
  if [ $COMP_CWORD -gt 1 ] && [ "${COMP_WORDS[1]}" = "services" ] ; then
    # brew services xxx yyy zzz
    _brew_services
    return
  fi
  _brew
}

# turn it on
complete -o bashdefault -o default -F _brew_with_services brew
